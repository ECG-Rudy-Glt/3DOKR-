services:
  web:
    build: ./vote/
    image: voting_web:latest
    ports:
      - "8080:8080"
    volumes:
      - .:/code
    depends_on:
      - redis
      - postgres
    networks:
      - front
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  redis:
    image: redis:7.4.2-alpine
    volumes:
      - redis_data:/data
    networks:
      - back
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 2

  postgres:
    image: postgres:17.2-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - back
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 2

  worker:
    build: ./worker/
    image: voting_worker:latest
    depends_on:
      - redis
      - postgres
    networks:
      - worker
    healthcheck:
      test: ["CMD", "dotnet", "--version"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  result:
    build: ./result/
    image: voting_result:latest
    ports:
      - "8888:8888"
    depends_on:
      - worker
      - postgres
    networks:
      - front
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

volumes:
  redis_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=192.168.50.106,rw"
      device: ":/export/redis_data"
  postgres_data:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=192.168.50.106,rw"
      device: ":/export/postgres_data"

networks:
  front:
    driver: overlay
  back:
    driver: overlay
  worker:
    driver: overlay
