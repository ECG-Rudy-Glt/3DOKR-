services:
  web:
    build: ./vote/
    ports:
      - "8080:8080"
    volumes:
      - .:/code
    depends_on:
      - redis
      - postgres
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 5s
      retries: 3

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:11-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build: ./worker/
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "dotnet", "--version"]
      interval: 10s
      timeout: 5s
      retries: 3

  result:
    build: ./result/
    ports:
      - "8888:8888"
    volumes:
      - ./result:/app
      - /app/node_modules
    depends_on:
      worker:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - my_network

volumes:
  redis_data:
  postgres_data:

networks:
  my_network:
    driver: bridge
